name: CI

on:
  pull_request:
    branches: ["*"]
      
env:
  client-directory: ./app/client/
  server-directory: ./app/server/
      
jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Install dependencies
      working-directory: ${{ env.client-directory }}
      run: npm ci
    - name: Run ESLint
      working-directory: ${{ env.client-directory }}
      run: npm run lint
      
  prettier:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Install dependencies
      working-directory: ${{ env.client-directory }}
      run: npm ci
    - name: Run Prettier
      working-directory: ${{ env.client-directory }}
      run: npm run format-check
      
  tsc:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Install dependencies
      working-directory: ${{ env.client-directory }}
      run: npm ci
    - name: Run Type Check
      working-directory: ${{ env.client-directory }}
      run: npm run type-check
      
  pylint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Get file changes
      id: get_file_changes
      uses: trilom/file-changes-action@v1.2.4
      with:
        output: ' '
    - name: Report list of changed files
      run: |
        echo Changed files: ${{ steps.get_file_changes.outputs.files }}
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Run Pylint on changed files
      run: |
        echo "${{ steps.get_file_changes.outputs.files}}" | tr " " "\n" | grep ".py$" | xargs pylint --rcfile=app/server/.pylintrc

  pytest:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      working-directory: ${{ env.server-directory }}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Pytest
      working-directory: ${{ env.server-directory }}
      run: |
        pytest tests
