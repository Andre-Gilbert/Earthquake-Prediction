@import '~@blueprintjs/core/lib/scss/variables';
@import '../../../styles/variables.module.scss';

.header {
    padding: $pt-padding;
    background-color: #ffffff;
}

.headerContainer {
    width: min(100%, 120rem);
    margin-inline: auto;
}

.title,
.subtitle {
    text-align: center;

    @media (min-width: $pt-breakpoint-sm) {
        text-align: left;
    }
}

.btnSelect {
    outline: none;
}

.container {
    padding: $pt-padding;
    display: flex;
    flex-direction: column;
    gap: $pt-padding;
}

.earthquakesChart {
    width: min(100%, $pt-max-width);
    margin-inline: auto;
    padding: 0;
}

.chartHeader,
.listHeader {
    padding: $pt-padding;
    border-bottom: 1px solid $pt-divider-black;
}

.chartFlex {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.chart {
    padding: $pt-padding;
}

.chartLoading,
.chartError {
    height: 72rem;
    display: grid;
    place-items: center;
}

.chartErrorTitle {
    margin-bottom: 0;
}

.earthquakesList {
    width: min(100%, $pt-max-width);
    margin-inline: auto;
    background-color: #fff;
    border-radius: 2px;
}

.earthquakesListCard {
    padding: 0;
    max-height: calc(100rem - 5.1rem);
    overflow-y: auto;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
}

.earthquakesHeaderFilters {
    border-bottom: 1px solid $pt-divider-black;
    display: flex;
    justify-content: space-between;
    padding: 1rem $pt-padding;
}

.btnForm {
    margin-left: 5px;
    padding: 5px 7px 5px 3px;
}

.earthquakesListLabels {
    position: sticky;
    top: 0;
    z-index: $pt-z-index-content;
    background-color: #fff;
    padding-block: 1rem;
    padding-left: 31px;
    padding-right: $pt-padding;
    display: flex;
    align-items: center;
    border-bottom: 1px solid $pt-divider-black;

    p {
        flex: 1 1 20%;
        margin-left: 10px;
        margin-bottom: 0;
        font-weight: 500;

        &:nth-child(n + 3) {
            display: none;

            @media (min-width: $pt-breakpoint-sm) {
                display: block;
            }
        }
    }
}

.listItem {
    padding: $pt-padding;
    display: flex;
    align-items: center;
    cursor: pointer;

    &:not(:last-of-type) {
        border-bottom: 1px solid $pt-divider-black;
    }

    &:hover {
        background-color: darken(#fff, 5%);
    }

    &.active {
        background-color: darken(#fff, 5%);
    }
}

.listItemContent {
    &:nth-child(n + 4) {
        display: none;

        @media (min-width: $pt-breakpoint-sm) {
            display: block;
        }
    }

    flex: 1 1 20%;
    margin-left: 10px;
}

.drawerContent {
    background-color: $pt-app-background-color;
}

.drawerContainer {
    width: min(100%, 160rem);
    margin-inline: auto;
}

.drawerCardKPIFlex {
    display: flex;
    flex-wrap: wrap;
    gap: $pt-padding;
}

.drawerCardKPI {
    flex: 1 1 30%;
    padding: $pt-padding;
}

.cardSubtitle {
    margin-bottom: 0;
}

.drawerCardChart {
    margin-top: 1.5rem;
    padding: 0;
}

.drawerCardChartHeader {
    display: flex;
    justify-content: space-between;
    min-height: 5rem;
    padding: $pt-padding;
    border-bottom: 1px solid $pt-divider-black;
}

.cardTitle {
    display: flex;
    align-items: center;

    span {
        color: $pt-text-color-muted;
    }

    h5 {
        margin-left: 10px;
        margin-bottom: 0;
    }
}

.drawerChart {
    padding: $pt-padding;
}

.drawerPredictions {
    margin-top: 1.5rem;
    padding: 0;
}

.drawerPredictionsTitle {
    display: flex;
    align-items: center;
    border-bottom: 1px solid $pt-divider-black;
    padding: $pt-padding;

    span {
        color: $pt-text-color-muted;
    }

    h5 {
        margin-left: 10px;
        margin-bottom: 0;
    }
}

.drawerListItem {
    padding: $pt-padding;
    display: flex;
    align-items: center;

    &:not(:last-of-type) {
        border-bottom: 1px solid $pt-divider-black;
    }
}

.listItemLoading {
    padding-block: $pt-padding;
    padding-left: 31px;
    padding-right: $pt-padding;
    display: flex;
    align-items: center;

    &:not(:last-of-type) {
        border-bottom: 1px solid $pt-divider-black;
    }
}

.loading {
    &:nth-child(n + 3) {
        display: none;

        @media (min-width: $pt-breakpoint-sm) {
            display: block;
        }
    }

    flex: 1 1 20%;
    margin-left: 10px;
}

.error {
    width: 100%;
    min-height: 49rem;
    display: grid;
    place-items: center;
}

.errorTitle {
    margin-bottom: 0;
}
